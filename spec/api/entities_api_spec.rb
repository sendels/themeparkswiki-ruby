=begin
#Theme Parks Wiki V1 API

#api.themeparks.wiki

The version of the OpenAPI document: 1.0.0-alpha

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::EntitiesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EntitiesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::EntitiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EntitiesApi' do
    it 'should create an instance of EntitiesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::EntitiesApi)
    end
  end

  # unit tests for get_entity
  # Get entity document
  # Get the full data document for a given entity. You can supply either a GUID or slug string.
  # @param entity_id Entity ID (or slug) to fetch
  # @param [Hash] opts the optional parameters
  # @return [EntityData]
  describe 'get_entity test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_children
  # Get all children for a given entity document
  # Fetch a list of all the children that belong to this entity. This is recursive, so a destination will return all parks and all rides within those parks.
  # @param entity_id Entity ID (or slug) to fetch
  # @param [Hash] opts the optional parameters
  # @return [EntityChildrenResponse]
  describe 'get_entity_children test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_live_data
  # Get live data for this entity and any child entities
  # Fetch this entity&#39;s live data (queue times, parade times, etc.) as well as all child entities. For a destination, this will include all parks within that destination.
  # @param entity_id Entity ID (or slug) to fetch
  # @param [Hash] opts the optional parameters
  # @return [EntityLiveDataResponse]
  describe 'get_entity_live_data test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_schedule_upcoming
  # Get entity schedule
  # Fetch this entity&#39;s schedule for the next 30 days
  # @param entity_id Entity ID (or slug) to fetch
  # @param [Hash] opts the optional parameters
  # @return [EntityScheduleResponse]
  describe 'get_entity_schedule_upcoming test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entity_schedule_year_month
  # Get entity schedule for a specific month and year
  # Fetch this entity&#39;s schedule for the supplied year and month
  # @param entity_id Entity ID (or slug) to fetch
  # @param year Schedule year to fetch
  # @param month Schedule month to fetch. Must be a two digit zero-padded month.
  # @param [Hash] opts the optional parameters
  # @return [EntityScheduleResponse]
  describe 'get_entity_schedule_year_month test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
